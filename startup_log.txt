=== STARTUP LOG Wed Apr 16 02:03:41 UTC 2025 ===
Starting Palliative Care Platform...
Waiting for database to be available...
db:5432 - accepting connections
DEV_STATE is set to TEST. Setting up test database...
Found backup file. Setting up database from backup...
Setting up database...
DROP DATABASE
CREATE DATABASE
Restoring from backup file...
SET
SET
SET
SET
SET
 set_config 
------------
 
(1 row)

SET
SET
SET
SET
CREATE TYPE
ALTER TYPE
CREATE TYPE
ALTER TYPE
CREATE TYPE
ALTER TYPE
CREATE TYPE
ALTER TYPE
CREATE TYPE
ALTER TYPE
CREATE TYPE
ALTER TYPE
CREATE TYPE
ALTER TYPE
SET
SET
CREATE TABLE
ALTER TABLE
CREATE SEQUENCE
ALTER TABLE
ALTER SEQUENCE
CREATE TABLE
ALTER TABLE
CREATE SEQUENCE
ALTER TABLE
ALTER SEQUENCE
CREATE TABLE
ALTER TABLE
CREATE SEQUENCE
ALTER TABLE
ALTER SEQUENCE
CREATE TABLE
ALTER TABLE
CREATE SEQUENCE
ALTER TABLE
ALTER SEQUENCE
CREATE TABLE
ALTER TABLE
CREATE SEQUENCE
ALTER TABLE
ALTER SEQUENCE
CREATE TABLE
ALTER TABLE
CREATE SEQUENCE
ALTER TABLE
ALTER SEQUENCE
CREATE TABLE
ALTER TABLE
CREATE SEQUENCE
ALTER TABLE
ALTER SEQUENCE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
COPY 21
COPY 151
COPY 4
COPY 4
COPY 3
COPY 6
COPY 4
 setval 
--------
    147
(1 row)

 setval 
--------
    184
(1 row)

 setval 
--------
     28
(1 row)

 setval 
--------
     28
(1 row)

 setval 
--------
     21
(1 row)

 setval 
--------
      6
(1 row)

 setval 
--------
     28
(1 row)

ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
CREATE INDEX
CREATE INDEX
CREATE INDEX
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
Database restored from backup successfully!
Checking and ensuring assessment data...
Checking and ensuring assessment data...
2025-04-16 02:03:41,947 INFO sqlalchemy.engine.Engine select pg_catalog.version()
2025-04-16 02:03:41,947 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-16 02:03:41,948 INFO sqlalchemy.engine.Engine select current_schema()
2025-04-16 02:03:41,948 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-16 02:03:41,948 INFO sqlalchemy.engine.Engine show standard_conforming_strings
2025-04-16 02:03:41,948 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-16 02:03:41,949 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-04-16 02:03:41,950 INFO sqlalchemy.engine.Engine SELECT patients.id AS patients_id, patients.mrn AS patients_mrn, patients.first_name AS patients_first_name, patients.last_name AS patients_last_name, patients.date_of_birth AS patients_date_of_birth, patients.gender AS patients_gender, patients.phone_number AS patients_phone_number, patients.email AS patients_email, patients.address AS patients_address, patients.primary_diagnosis AS patients_primary_diagnosis, patients.secondary_diagnoses AS patients_secondary_diagnoses, patients.protocol_type AS patients_protocol_type, patients.primary_nurse_id AS patients_primary_nurse_id, patients.emergency_contact_name AS patients_emergency_contact_name, patients.emergency_contact_phone AS patients_emergency_contact_phone, patients.emergency_contact_relationship AS patients_emergency_contact_relationship, patients.advance_directive AS patients_advance_directive, patients.dnr_status AS patients_dnr_status, patients.allergies AS patients_allergies, patients.notes AS patients_notes, patients.is_active AS patients_is_active, patients.created_at AS patients_created_at, patients.updated_at AS patients_updated_at 
FROM patients 
WHERE patients.first_name = %(first_name_1)s AND patients.last_name = %(last_name_1)s 
 LIMIT %(param_1)s
2025-04-16 02:03:41,950 INFO sqlalchemy.engine.Engine [generated in 0.00008s] {'first_name_1': 'Mary', 'last_name_1': 'Johnson', 'param_1': 1}
2025-04-16 02:03:41,952 INFO sqlalchemy.engine.Engine SELECT protocols.id AS protocols_id, protocols.name AS protocols_name, protocols.description AS protocols_description, protocols.protocol_type AS protocols_protocol_type, protocols.version AS protocols_version, protocols.questions AS protocols_questions, protocols.decision_tree AS protocols_decision_tree, protocols.interventions AS protocols_interventions, protocols.is_active AS protocols_is_active, protocols.created_at AS protocols_created_at, protocols.updated_at AS protocols_updated_at 
FROM protocols 
WHERE protocols.protocol_type = %(protocol_type_1)s 
 LIMIT %(param_1)s
2025-04-16 02:03:41,952 INFO sqlalchemy.engine.Engine [generated in 0.00007s] {'protocol_type_1': 'HEART_FAILURE', 'param_1': 1}
2025-04-16 02:03:41,953 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.password AS users_password, users.first_name AS users_first_name, users.last_name AS users_last_name, users.role AS users_role, users.phone_number AS users_phone_number, users.license_number AS users_license_number, users.is_active AS users_is_active, users.login_attempts AS users_login_attempts, users.last_login_at AS users_last_login_at, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.role = %(role_1)s 
 LIMIT %(param_1)s
2025-04-16 02:03:41,953 INFO sqlalchemy.engine.Engine [generated in 0.00007s] {'role_1': 'NURSE', 'param_1': 1}
2025-04-16 02:03:41,955 INFO sqlalchemy.engine.Engine SELECT assessments.id AS assessments_id, assessments.patient_id AS assessments_patient_id, assessments.protocol_id AS assessments_protocol_id, assessments.conducted_by_id AS assessments_conducted_by_id, assessments.call_id AS assessments_call_id, assessments.assessment_date AS assessments_assessment_date, assessments.responses AS assessments_responses, assessments.symptoms AS assessments_symptoms, assessments.interventions AS assessments_interventions, assessments.notes AS assessments_notes, assessments.follow_up_needed AS assessments_follow_up_needed, assessments.follow_up_date AS assessments_follow_up_date, assessments.follow_up_priority AS assessments_follow_up_priority, assessments.ai_guidance AS assessments_ai_guidance, assessments.created_at AS assessments_created_at, assessments.updated_at AS assessments_updated_at 
FROM assessments 
WHERE assessments.patient_id = %(patient_id_1)s AND assessments.assessment_date >= %(assessment_date_1)s AND assessments.assessment_date <= %(assessment_date_2)s AND assessments.follow_up_priority = %(follow_up_priority_1)s 
 LIMIT %(param_1)s
2025-04-16 02:03:41,955 INFO sqlalchemy.engine.Engine [generated in 0.00007s] {'patient_id_1': 20, 'assessment_date_1': datetime.datetime(2025, 3, 25, 0, 0), 'assessment_date_2': datetime.datetime(2025, 3, 25, 23, 59), 'follow_up_priority_1': 'HIGH', 'param_1': 1}
Urgent assessment already exists.
2025-04-16 02:03:41,957 INFO sqlalchemy.engine.Engine SELECT count(*) AS count_1 
FROM (SELECT patients.id AS patients_id, patients.mrn AS patients_mrn, patients.first_name AS patients_first_name, patients.last_name AS patients_last_name, patients.date_of_birth AS patients_date_of_birth, patients.gender AS patients_gender, patients.phone_number AS patients_phone_number, patients.email AS patients_email, patients.address AS patients_address, patients.primary_diagnosis AS patients_primary_diagnosis, patients.secondary_diagnoses AS patients_secondary_diagnoses, patients.protocol_type AS patients_protocol_type, patients.primary_nurse_id AS patients_primary_nurse_id, patients.emergency_contact_name AS patients_emergency_contact_name, patients.emergency_contact_phone AS patients_emergency_contact_phone, patients.emergency_contact_relationship AS patients_emergency_contact_relationship, patients.advance_directive AS patients_advance_directive, patients.dnr_status AS patients_dnr_status, patients.allergies AS patients_allergies, patients.notes AS patients_notes, patients.is_active AS patients_is_active, patients.created_at AS patients_created_at, patients.updated_at AS patients_updated_at 
FROM patients) AS anon_1
2025-04-16 02:03:41,957 INFO sqlalchemy.engine.Engine [generated in 0.00006s] {}
2025-04-16 02:03:41,959 INFO sqlalchemy.engine.Engine SELECT count(*) AS count_1 
FROM (SELECT assessments.id AS assessments_id, assessments.patient_id AS assessments_patient_id, assessments.protocol_id AS assessments_protocol_id, assessments.conducted_by_id AS assessments_conducted_by_id, assessments.call_id AS assessments_call_id, assessments.assessment_date AS assessments_assessment_date, assessments.responses AS assessments_responses, assessments.symptoms AS assessments_symptoms, assessments.interventions AS assessments_interventions, assessments.notes AS assessments_notes, assessments.follow_up_needed AS assessments_follow_up_needed, assessments.follow_up_date AS assessments_follow_up_date, assessments.follow_up_priority AS assessments_follow_up_priority, assessments.ai_guidance AS assessments_ai_guidance, assessments.created_at AS assessments_created_at, assessments.updated_at AS assessments_updated_at 
FROM assessments) AS anon_1
2025-04-16 02:03:41,959 INFO sqlalchemy.engine.Engine [generated in 0.00007s] {}
Sufficient assessments found (21). No additional history needed.
2025-04-16 02:03:41,959 INFO sqlalchemy.engine.Engine ROLLBACK
Assessment data verification completed successfully!
Database initialization and seeding complete!
Default login credentials:
  Admin: admin / password123
  Nurse: nurse1 / password123
  Physician: physician / password123
Starting Gunicorn server...
[2025-04-16 02:03:42 +0000] [1] [INFO] Starting gunicorn 21.2.0
[2025-04-16 02:03:42 +0000] [1] [INFO] Listening at: http://0.0.0.0:5000 (1)
[2025-04-16 02:03:42 +0000] [1] [INFO] Using worker: sync
[2025-04-16 02:03:42 +0000] [14] [INFO] Booting worker with pid: 14
[2025-04-16 02:03:42 +0000] [15] [INFO] Booting worker with pid: 15
[2025-04-16 02:03:42 +0000] [16] [INFO] Booting worker with pid: 16
[2025-04-16 02:03:42 +0000] [17] [INFO] Booting worker with pid: 17
