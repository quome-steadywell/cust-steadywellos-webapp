=== STARTUP LOG Tue Apr 15 00:55:35 UTC 2025 ===
Starting Palliative Care Platform...
Waiting for database to be available...
db:5432 - accepting connections
DEV_STATE is set to TEST. Setting up test database...
Found backup file. Setting up database from backup...
Setting up database...
DROP DATABASE
CREATE DATABASE
Restoring from backup file...
SET
SET
SET
SET
SET
 set_config 
------------
 
(1 row)

SET
SET
SET
SET
CREATE TYPE
ALTER TYPE
CREATE TYPE
ALTER TYPE
CREATE TYPE
ALTER TYPE
CREATE TYPE
ALTER TYPE
CREATE TYPE
ALTER TYPE
CREATE TYPE
ALTER TYPE
CREATE TYPE
ALTER TYPE
SET
SET
CREATE TABLE
ALTER TABLE
CREATE SEQUENCE
ALTER TABLE
ALTER SEQUENCE
CREATE TABLE
ALTER TABLE
CREATE SEQUENCE
ALTER TABLE
ALTER SEQUENCE
CREATE TABLE
ALTER TABLE
CREATE SEQUENCE
ALTER TABLE
ALTER SEQUENCE
CREATE TABLE
ALTER TABLE
CREATE SEQUENCE
ALTER TABLE
ALTER SEQUENCE
CREATE TABLE
ALTER TABLE
CREATE SEQUENCE
ALTER TABLE
ALTER SEQUENCE
CREATE TABLE
ALTER TABLE
CREATE SEQUENCE
ALTER TABLE
ALTER SEQUENCE
CREATE TABLE
ALTER TABLE
CREATE SEQUENCE
ALTER TABLE
ALTER SEQUENCE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
COPY 21
COPY 150
COPY 4
COPY 4
COPY 3
COPY 6
COPY 4
 setval 
--------
    147
(1 row)

 setval 
--------
    183
(1 row)

 setval 
--------
     28
(1 row)

 setval 
--------
     28
(1 row)

 setval 
--------
     21
(1 row)

 setval 
--------
      6
(1 row)

 setval 
--------
     28
(1 row)

ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
CREATE INDEX
CREATE INDEX
CREATE INDEX
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
ALTER TABLE
Database restored from backup successfully!
Checking and ensuring assessment data...
Checking and ensuring assessment data...
2025-04-15 00:55:36,249 INFO sqlalchemy.engine.Engine select pg_catalog.version()
2025-04-15 00:55:36,249 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-15 00:55:36,249 INFO sqlalchemy.engine.Engine select current_schema()
2025-04-15 00:55:36,249 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-15 00:55:36,249 INFO sqlalchemy.engine.Engine show standard_conforming_strings
2025-04-15 00:55:36,250 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-15 00:55:36,250 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-04-15 00:55:36,252 INFO sqlalchemy.engine.Engine SELECT patients.id AS patients_id, patients.mrn AS patients_mrn, patients.first_name AS patients_first_name, patients.last_name AS patients_last_name, patients.date_of_birth AS patients_date_of_birth, patients.gender AS patients_gender, patients.phone_number AS patients_phone_number, patients.email AS patients_email, patients.address AS patients_address, patients.primary_diagnosis AS patients_primary_diagnosis, patients.secondary_diagnoses AS patients_secondary_diagnoses, patients.protocol_type AS patients_protocol_type, patients.primary_nurse_id AS patients_primary_nurse_id, patients.emergency_contact_name AS patients_emergency_contact_name, patients.emergency_contact_phone AS patients_emergency_contact_phone, patients.emergency_contact_relationship AS patients_emergency_contact_relationship, patients.advance_directive AS patients_advance_directive, patients.dnr_status AS patients_dnr_status, patients.allergies AS patients_allergies, patients.notes AS patients_notes, patients.is_active AS patients_is_active, patients.created_at AS patients_created_at, patients.updated_at AS patients_updated_at 
FROM patients 
WHERE patients.first_name = %(first_name_1)s AND patients.last_name = %(last_name_1)s 
 LIMIT %(param_1)s
2025-04-15 00:55:36,252 INFO sqlalchemy.engine.Engine [generated in 0.00007s] {'first_name_1': 'Mary', 'last_name_1': 'Johnson', 'param_1': 1}
2025-04-15 00:55:36,253 INFO sqlalchemy.engine.Engine SELECT protocols.id AS protocols_id, protocols.name AS protocols_name, protocols.description AS protocols_description, protocols.protocol_type AS protocols_protocol_type, protocols.version AS protocols_version, protocols.questions AS protocols_questions, protocols.decision_tree AS protocols_decision_tree, protocols.interventions AS protocols_interventions, protocols.is_active AS protocols_is_active, protocols.created_at AS protocols_created_at, protocols.updated_at AS protocols_updated_at 
FROM protocols 
WHERE protocols.protocol_type = %(protocol_type_1)s 
 LIMIT %(param_1)s
2025-04-15 00:55:36,253 INFO sqlalchemy.engine.Engine [generated in 0.00008s] {'protocol_type_1': 'HEART_FAILURE', 'param_1': 1}
2025-04-15 00:55:36,254 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.password AS users_password, users.first_name AS users_first_name, users.last_name AS users_last_name, users.role AS users_role, users.phone_number AS users_phone_number, users.license_number AS users_license_number, users.is_active AS users_is_active, users.login_attempts AS users_login_attempts, users.last_login_at AS users_last_login_at, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.role = %(role_1)s 
 LIMIT %(param_1)s
2025-04-15 00:55:36,254 INFO sqlalchemy.engine.Engine [generated in 0.00009s] {'role_1': 'NURSE', 'param_1': 1}
2025-04-15 00:55:36,256 INFO sqlalchemy.engine.Engine SELECT assessments.id AS assessments_id, assessments.patient_id AS assessments_patient_id, assessments.protocol_id AS assessments_protocol_id, assessments.conducted_by_id AS assessments_conducted_by_id, assessments.call_id AS assessments_call_id, assessments.assessment_date AS assessments_assessment_date, assessments.responses AS assessments_responses, assessments.symptoms AS assessments_symptoms, assessments.interventions AS assessments_interventions, assessments.notes AS assessments_notes, assessments.follow_up_needed AS assessments_follow_up_needed, assessments.follow_up_date AS assessments_follow_up_date, assessments.follow_up_priority AS assessments_follow_up_priority, assessments.ai_guidance AS assessments_ai_guidance, assessments.created_at AS assessments_created_at, assessments.updated_at AS assessments_updated_at 
FROM assessments 
WHERE assessments.patient_id = %(patient_id_1)s AND assessments.assessment_date >= %(assessment_date_1)s AND assessments.assessment_date <= %(assessment_date_2)s AND assessments.follow_up_priority = %(follow_up_priority_1)s 
 LIMIT %(param_1)s
2025-04-15 00:55:36,256 INFO sqlalchemy.engine.Engine [generated in 0.00006s] {'patient_id_1': 20, 'assessment_date_1': datetime.datetime(2025, 3, 25, 0, 0), 'assessment_date_2': datetime.datetime(2025, 3, 25, 23, 59), 'follow_up_priority_1': 'HIGH', 'param_1': 1}
Urgent assessment already exists.
2025-04-15 00:55:36,258 INFO sqlalchemy.engine.Engine SELECT count(*) AS count_1 
FROM (SELECT patients.id AS patients_id, patients.mrn AS patients_mrn, patients.first_name AS patients_first_name, patients.last_name AS patients_last_name, patients.date_of_birth AS patients_date_of_birth, patients.gender AS patients_gender, patients.phone_number AS patients_phone_number, patients.email AS patients_email, patients.address AS patients_address, patients.primary_diagnosis AS patients_primary_diagnosis, patients.secondary_diagnoses AS patients_secondary_diagnoses, patients.protocol_type AS patients_protocol_type, patients.primary_nurse_id AS patients_primary_nurse_id, patients.emergency_contact_name AS patients_emergency_contact_name, patients.emergency_contact_phone AS patients_emergency_contact_phone, patients.emergency_contact_relationship AS patients_emergency_contact_relationship, patients.advance_directive AS patients_advance_directive, patients.dnr_status AS patients_dnr_status, patients.allergies AS patients_allergies, patients.notes AS patients_notes, patients.is_active AS patients_is_active, patients.created_at AS patients_created_at, patients.updated_at AS patients_updated_at 
FROM patients) AS anon_1
2025-04-15 00:55:36,258 INFO sqlalchemy.engine.Engine [generated in 0.00012s] {}
2025-04-15 00:55:36,260 INFO sqlalchemy.engine.Engine SELECT count(*) AS count_1 
FROM (SELECT assessments.id AS assessments_id, assessments.patient_id AS assessments_patient_id, assessments.protocol_id AS assessments_protocol_id, assessments.conducted_by_id AS assessments_conducted_by_id, assessments.call_id AS assessments_call_id, assessments.assessment_date AS assessments_assessment_date, assessments.responses AS assessments_responses, assessments.symptoms AS assessments_symptoms, assessments.interventions AS assessments_interventions, assessments.notes AS assessments_notes, assessments.follow_up_needed AS assessments_follow_up_needed, assessments.follow_up_date AS assessments_follow_up_date, assessments.follow_up_priority AS assessments_follow_up_priority, assessments.ai_guidance AS assessments_ai_guidance, assessments.created_at AS assessments_created_at, assessments.updated_at AS assessments_updated_at 
FROM assessments) AS anon_1
2025-04-15 00:55:36,260 INFO sqlalchemy.engine.Engine [generated in 0.00010s] {}
Sufficient assessments found (21). No additional history needed.
2025-04-15 00:55:36,261 INFO sqlalchemy.engine.Engine ROLLBACK
Assessment data verification completed successfully!
Database initialization and seeding complete!
Default login credentials:
  Admin: admin / password123
  Nurse: nurse1 / password123
  Physician: physician / password123
Starting Gunicorn server...
[2025-04-15 00:55:36 +0000] [1] [INFO] Starting gunicorn 21.2.0
[2025-04-15 00:55:36 +0000] [1] [INFO] Listening at: http://0.0.0.0:5000 (1)
[2025-04-15 00:55:36 +0000] [1] [INFO] Using worker: sync
[2025-04-15 00:55:36 +0000] [14] [INFO] Booting worker with pid: 14
[2025-04-15 00:55:36 +0000] [15] [INFO] Booting worker with pid: 15
[2025-04-15 00:55:36 +0000] [16] [INFO] Booting worker with pid: 16
[2025-04-15 00:55:36 +0000] [17] [INFO] Booting worker with pid: 17
API endpoint /api/startup-logs called at 2025-04-15 00:55:44
Attempting to get docker logs...
Error getting docker logs: Command 'docker logs palliative_care_platform-web-1 2>&1' returned non-zero exit status 127.
Checking for log file at /app/startup_log.txt
Log file exists, attempting to read
Startup logs read: 10198 characters
Adding hardcoded terminal output
Sending response with 24761 characters of log data
2025-04-15 00:55:55,374 INFO sqlalchemy.engine.Engine select pg_catalog.version()
2025-04-15 00:55:55,374 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-15 00:55:55,375 INFO sqlalchemy.engine.Engine select current_schema()
2025-04-15 00:55:55,375 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-15 00:55:55,376 INFO sqlalchemy.engine.Engine show standard_conforming_strings
2025-04-15 00:55:55,376 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-15 00:55:55,376 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-04-15 00:55:55,378 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.password AS users_password, users.first_name AS users_first_name, users.last_name AS users_last_name, users.role AS users_role, users.phone_number AS users_phone_number, users.license_number AS users_license_number, users.is_active AS users_is_active, users.login_attempts AS users_login_attempts, users.last_login_at AS users_last_login_at, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.username = %(username_1)s 
 LIMIT %(param_1)s
2025-04-15 00:55:55,378 INFO sqlalchemy.engine.Engine [generated in 0.00010s] {'username_1': 'admin', 'param_1': 1}
2025-04-15 00:55:55,381 INFO sqlalchemy.engine.Engine UPDATE users SET login_attempts=%(login_attempts)s, updated_at=%(updated_at)s WHERE users.id = %(users_id)s
2025-04-15 00:55:55,381 INFO sqlalchemy.engine.Engine [generated in 0.00009s] {'login_attempts': 1, 'updated_at': datetime.datetime(2025, 4, 15, 0, 55, 55, 381657), 'users_id': 25}
2025-04-15 00:55:55,382 INFO sqlalchemy.engine.Engine COMMIT
2025-04-15 00:56:07,251 INFO sqlalchemy.engine.Engine select pg_catalog.version()
2025-04-15 00:56:07,251 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-15 00:56:07,252 INFO sqlalchemy.engine.Engine select current_schema()
2025-04-15 00:56:07,252 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-15 00:56:07,253 INFO sqlalchemy.engine.Engine show standard_conforming_strings
2025-04-15 00:56:07,253 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-15 00:56:07,254 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-04-15 00:56:07,256 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.password AS users_password, users.first_name AS users_first_name, users.last_name AS users_last_name, users.role AS users_role, users.phone_number AS users_phone_number, users.license_number AS users_license_number, users.is_active AS users_is_active, users.login_attempts AS users_login_attempts, users.last_login_at AS users_last_login_at, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.username = %(username_1)s 
 LIMIT %(param_1)s
2025-04-15 00:56:07,256 INFO sqlalchemy.engine.Engine [generated in 0.00010s] {'username_1': 'admin', 'param_1': 1}
2025-04-15 00:56:07,259 INFO sqlalchemy.engine.Engine UPDATE users SET login_attempts=%(login_attempts)s, last_login_at=%(last_login_at)s, updated_at=%(updated_at)s WHERE users.id = %(users_id)s
2025-04-15 00:56:07,259 INFO sqlalchemy.engine.Engine [generated in 0.00019s] {'login_attempts': 0, 'last_login_at': datetime.datetime(2025, 4, 15, 0, 56, 7, 258548), 'updated_at': datetime.datetime(2025, 4, 15, 0, 56, 7, 259632), 'users_id': 25}
2025-04-15 00:56:07,261 INFO sqlalchemy.engine.Engine COMMIT
2025-04-15 00:56:07,262 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-04-15 00:56:07,263 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.password AS users_password, users.first_name AS users_first_name, users.last_name AS users_last_name, users.role AS users_role, users.phone_number AS users_phone_number, users.license_number AS users_license_number, users.is_active AS users_is_active, users.login_attempts AS users_login_attempts, users.last_login_at AS users_last_login_at, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.id = %(pk_1)s
2025-04-15 00:56:07,263 INFO sqlalchemy.engine.Engine [generated in 0.00011s] {'pk_1': 25}
2025-04-15 00:56:07,265 INFO sqlalchemy.engine.Engine INSERT INTO audit_logs (user_id, action, resource_type, resource_id, details, ip_address, user_agent, timestamp) VALUES (%(user_id)s, %(action)s, %(resource_type)s, %(resource_id)s, %(details)s, %(ip_address)s, %(user_agent)s, %(timestamp)s) RETURNING audit_logs.id
2025-04-15 00:56:07,265 INFO sqlalchemy.engine.Engine [generated in 0.00014s] {'user_id': 25, 'action': 'login', 'resource_type': 'user', 'resource_id': 25, 'details': 'null', 'ip_address': '192.168.65.1', 'user_agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36 Edg/135.0.0.0', 'timestamp': datetime.datetime(2025, 4, 15, 0, 56, 7, 265408)}
2025-04-15 00:56:07,266 INFO sqlalchemy.engine.Engine COMMIT
2025-04-15 00:56:07,268 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-04-15 00:56:07,268 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.password AS users_password, users.first_name AS users_first_name, users.last_name AS users_last_name, users.role AS users_role, users.phone_number AS users_phone_number, users.license_number AS users_license_number, users.is_active AS users_is_active, users.login_attempts AS users_login_attempts, users.last_login_at AS users_last_login_at, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.id = %(pk_1)s
2025-04-15 00:56:07,268 INFO sqlalchemy.engine.Engine [cached since 0.005503s ago] {'pk_1': 25}
2025-04-15 00:56:07,269 INFO sqlalchemy.engine.Engine ROLLBACK
2025-04-15 00:56:07,349 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-04-15 00:56:07,349 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-04-15 00:56:07,349 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.password AS users_password, users.first_name AS users_first_name, users.last_name AS users_last_name, users.role AS users_role, users.phone_number AS users_phone_number, users.license_number AS users_license_number, users.is_active AS users_is_active, users.login_attempts AS users_login_attempts, users.last_login_at AS users_last_login_at, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.id = %(pk_1)s
2025-04-15 00:56:07,349 INFO sqlalchemy.engine.Engine [generated in 0.00012s] {'pk_1': 25}
2025-04-15 00:56:07,349 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.password AS users_password, users.first_name AS users_first_name, users.last_name AS users_last_name, users.role AS users_role, users.phone_number AS users_phone_number, users.license_number AS users_license_number, users.is_active AS users_is_active, users.login_attempts AS users_login_attempts, users.last_login_at AS users_last_login_at, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.id = %(pk_1)s
2025-04-15 00:56:07,349 INFO sqlalchemy.engine.Engine [generated in 0.00011s] {'pk_1': 25}
2025-04-15 00:56:07,352 INFO sqlalchemy.engine.Engine SELECT calls.id AS calls_id, calls.patient_id AS calls_patient_id, calls.conducted_by_id AS calls_conducted_by_id, calls.scheduled_time AS calls_scheduled_time, calls.start_time AS calls_start_time, calls.end_time AS calls_end_time, calls.duration AS calls_duration, calls.status AS calls_status, calls.call_type AS calls_call_type, calls.twilio_call_sid AS calls_twilio_call_sid, calls.recording_url AS calls_recording_url, calls.transcript AS calls_transcript, calls.notes AS calls_notes, calls.created_at AS calls_created_at, calls.updated_at AS calls_updated_at 
FROM calls 
WHERE calls.status = %(status_1)s ORDER BY calls.end_time DESC 
 LIMIT %(param_1)s
2025-04-15 00:56:07,353 INFO sqlalchemy.engine.Engine [generated in 0.00017s] {'status_1': 'COMPLETED', 'param_1': 5}
2025-04-15 00:56:07,353 INFO sqlalchemy.engine.Engine SELECT calls.id AS calls_id, calls.patient_id AS calls_patient_id, calls.conducted_by_id AS calls_conducted_by_id, calls.scheduled_time AS calls_scheduled_time, calls.start_time AS calls_start_time, calls.end_time AS calls_end_time, calls.duration AS calls_duration, calls.status AS calls_status, calls.call_type AS calls_call_type, calls.twilio_call_sid AS calls_twilio_call_sid, calls.recording_url AS calls_recording_url, calls.transcript AS calls_transcript, calls.notes AS calls_notes, calls.created_at AS calls_created_at, calls.updated_at AS calls_updated_at 
FROM calls 
WHERE calls.status = %(status_1)s AND calls.scheduled_time >= %(scheduled_time_1)s AND calls.scheduled_time < %(scheduled_time_2)s ORDER BY calls.scheduled_time 
 LIMIT %(param_1)s
2025-04-15 00:56:07,353 INFO sqlalchemy.engine.Engine [generated in 0.00010s] {'status_1': 'SCHEDULED', 'scheduled_time_1': datetime.datetime(2025, 4, 15, 0, 56, 7, 350970), 'scheduled_time_2': datetime.datetime(2025, 4, 16, 0, 0), 'param_1': 10}
2025-04-15 00:56:07,354 INFO sqlalchemy.engine.Engine ROLLBACK
2025-04-15 00:56:07,354 INFO sqlalchemy.engine.Engine SELECT assessments.id AS assessments_id, assessments.patient_id AS assessments_patient_id, assessments.protocol_id AS assessments_protocol_id, assessments.conducted_by_id AS assessments_conducted_by_id, assessments.call_id AS assessments_call_id, assessments.assessment_date AS assessments_assessment_date, assessments.responses AS assessments_responses, assessments.symptoms AS assessments_symptoms, assessments.interventions AS assessments_interventions, assessments.notes AS assessments_notes, assessments.follow_up_needed AS assessments_follow_up_needed, assessments.follow_up_date AS assessments_follow_up_date, assessments.follow_up_priority AS assessments_follow_up_priority, assessments.ai_guidance AS assessments_ai_guidance, assessments.created_at AS assessments_created_at, assessments.updated_at AS assessments_updated_at 
FROM assessments ORDER BY assessments.assessment_date DESC 
 LIMIT %(param_1)s
2025-04-15 00:56:07,354 INFO sqlalchemy.engine.Engine [generated in 0.00009s] {'param_1': 5}
2025-04-15 00:56:07,356 INFO sqlalchemy.engine.Engine SELECT patients.id AS patients_id, patients.mrn AS patients_mrn, patients.first_name AS patients_first_name, patients.last_name AS patients_last_name, patients.date_of_birth AS patients_date_of_birth, patients.gender AS patients_gender, patients.phone_number AS patients_phone_number, patients.email AS patients_email, patients.address AS patients_address, patients.primary_diagnosis AS patients_primary_diagnosis, patients.secondary_diagnoses AS patients_secondary_diagnoses, patients.protocol_type AS patients_protocol_type, patients.primary_nurse_id AS patients_primary_nurse_id, patients.emergency_contact_name AS patients_emergency_contact_name, patients.emergency_contact_phone AS patients_emergency_contact_phone, patients.emergency_contact_relationship AS patients_emergency_contact_relationship, patients.advance_directive AS patients_advance_directive, patients.dnr_status AS patients_dnr_status, patients.allergies AS patients_allergies, patients.notes AS patients_notes, patients.is_active AS patients_is_active, patients.created_at AS patients_created_at, patients.updated_at AS patients_updated_at 
FROM patients 
WHERE patients.id = %(pk_1)s
2025-04-15 00:56:07,356 INFO sqlalchemy.engine.Engine [generated in 0.00007s] {'pk_1': 20}
2025-04-15 00:56:07,359 INFO sqlalchemy.engine.Engine SELECT patients.id AS patients_id, patients.mrn AS patients_mrn, patients.first_name AS patients_first_name, patients.last_name AS patients_last_name, patients.date_of_birth AS patients_date_of_birth, patients.gender AS patients_gender, patients.phone_number AS patients_phone_number, patients.email AS patients_email, patients.address AS patients_address, patients.primary_diagnosis AS patients_primary_diagnosis, patients.secondary_diagnoses AS patients_secondary_diagnoses, patients.protocol_type AS patients_protocol_type, patients.primary_nurse_id AS patients_primary_nurse_id, patients.emergency_contact_name AS patients_emergency_contact_name, patients.emergency_contact_phone AS patients_emergency_contact_phone, patients.emergency_contact_relationship AS patients_emergency_contact_relationship, patients.advance_directive AS patients_advance_directive, patients.dnr_status AS patients_dnr_status, patients.allergies AS patients_allergies, patients.notes AS patients_notes, patients.is_active AS patients_is_active, patients.created_at AS patients_created_at, patients.updated_at AS patients_updated_at 
FROM patients 
WHERE patients.id = %(pk_1)s
2025-04-15 00:56:07,359 INFO sqlalchemy.engine.Engine [cached since 0.002639s ago] {'pk_1': 19}
2025-04-15 00:56:07,360 INFO sqlalchemy.engine.Engine SELECT patients.id AS patients_id, patients.mrn AS patients_mrn, patients.first_name AS patients_first_name, patients.last_name AS patients_last_name, patients.date_of_birth AS patients_date_of_birth, patients.gender AS patients_gender, patients.phone_number AS patients_phone_number, patients.email AS patients_email, patients.address AS patients_address, patients.primary_diagnosis AS patients_primary_diagnosis, patients.secondary_diagnoses AS patients_secondary_diagnoses, patients.protocol_type AS patients_protocol_type, patients.primary_nurse_id AS patients_primary_nurse_id, patients.emergency_contact_name AS patients_emergency_contact_name, patients.emergency_contact_phone AS patients_emergency_contact_phone, patients.emergency_contact_relationship AS patients_emergency_contact_relationship, patients.advance_directive AS patients_advance_directive, patients.dnr_status AS patients_dnr_status, patients.allergies AS patients_allergies, patients.notes AS patients_notes, patients.is_active AS patients_is_active, patients.created_at AS patients_created_at, patients.updated_at AS patients_updated_at 
FROM patients 
WHERE patients.id = %(pk_1)s
2025-04-15 00:56:07,360 INFO sqlalchemy.engine.Engine [generated in 0.00008s] {'pk_1': 21}
2025-04-15 00:56:07,361 INFO sqlalchemy.engine.Engine ROLLBACK
2025-04-15 00:56:07,372 INFO sqlalchemy.engine.Engine select pg_catalog.version()
2025-04-15 00:56:07,372 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-15 00:56:07,372 INFO sqlalchemy.engine.Engine select pg_catalog.version()
2025-04-15 00:56:07,372 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-15 00:56:07,373 INFO sqlalchemy.engine.Engine select current_schema()
2025-04-15 00:56:07,373 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-15 00:56:07,373 INFO sqlalchemy.engine.Engine select current_schema()
2025-04-15 00:56:07,373 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-15 00:56:07,373 INFO sqlalchemy.engine.Engine show standard_conforming_strings
2025-04-15 00:56:07,373 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-15 00:56:07,373 INFO sqlalchemy.engine.Engine show standard_conforming_strings
2025-04-15 00:56:07,373 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-04-15 00:56:07,374 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-04-15 00:56:07,374 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-04-15 00:56:07,375 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.password AS users_password, users.first_name AS users_first_name, users.last_name AS users_last_name, users.role AS users_role, users.phone_number AS users_phone_number, users.license_number AS users_license_number, users.is_active AS users_is_active, users.login_attempts AS users_login_attempts, users.last_login_at AS users_last_login_at, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.id = %(pk_1)s
2025-04-15 00:56:07,375 INFO sqlalchemy.engine.Engine [generated in 0.00008s] {'pk_1': 25}
2025-04-15 00:56:07,375 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.password AS users_password, users.first_name AS users_first_name, users.last_name AS users_last_name, users.role AS users_role, users.phone_number AS users_phone_number, users.license_number AS users_license_number, users.is_active AS users_is_active, users.login_attempts AS users_login_attempts, users.last_login_at AS users_last_login_at, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.id = %(pk_1)s
2025-04-15 00:56:07,375 INFO sqlalchemy.engine.Engine [generated in 0.00007s] {'pk_1': 25}
2025-04-15 00:56:07,377 INFO sqlalchemy.engine.Engine SELECT assessments.id AS assessments_id, assessments.patient_id AS assessments_patient_id, assessments.protocol_id AS assessments_protocol_id, assessments.conducted_by_id AS assessments_conducted_by_id, assessments.call_id AS assessments_call_id, assessments.assessment_date AS assessments_assessment_date, assessments.responses AS assessments_responses, assessments.symptoms AS assessments_symptoms, assessments.interventions AS assessments_interventions, assessments.notes AS assessments_notes, assessments.follow_up_needed AS assessments_follow_up_needed, assessments.follow_up_date AS assessments_follow_up_date, assessments.follow_up_priority AS assessments_follow_up_priority, assessments.ai_guidance AS assessments_ai_guidance, assessments.created_at AS assessments_created_at, assessments.updated_at AS assessments_updated_at 
FROM assessments 
WHERE assessments.follow_up_needed = true AND assessments.follow_up_priority = %(follow_up_priority_1)s ORDER BY assessments.follow_up_date 
 LIMIT %(param_1)s
2025-04-15 00:56:07,377 INFO sqlalchemy.engine.Engine [generated in 0.00011s] {'follow_up_priority_1': 'HIGH', 'param_1': 10}
2025-04-15 00:56:07,378 INFO sqlalchemy.engine.Engine SELECT count(*) AS count_1 
FROM (SELECT patients.id AS patients_id, patients.mrn AS patients_mrn, patients.first_name AS patients_first_name, patients.last_name AS patients_last_name, patients.date_of_birth AS patients_date_of_birth, patients.gender AS patients_gender, patients.phone_number AS patients_phone_number, patients.email AS patients_email, patients.address AS patients_address, patients.primary_diagnosis AS patients_primary_diagnosis, patients.secondary_diagnoses AS patients_secondary_diagnoses, patients.protocol_type AS patients_protocol_type, patients.primary_nurse_id AS patients_primary_nurse_id, patients.emergency_contact_name AS patients_emergency_contact_name, patients.emergency_contact_phone AS patients_emergency_contact_phone, patients.emergency_contact_relationship AS patients_emergency_contact_relationship, patients.advance_directive AS patients_advance_directive, patients.dnr_status AS patients_dnr_status, patients.allergies AS patients_allergies, patients.notes AS patients_notes, patients.is_active AS patients_is_active, patients.created_at AS patients_created_at, patients.updated_at AS patients_updated_at 
FROM patients) AS anon_1
2025-04-15 00:56:07,378 INFO sqlalchemy.engine.Engine [generated in 0.00013s] {}
2025-04-15 00:56:07,379 INFO sqlalchemy.engine.Engine SELECT patients.id AS patients_id, patients.mrn AS patients_mrn, patients.first_name AS patients_first_name, patients.last_name AS patients_last_name, patients.date_of_birth AS patients_date_of_birth, patients.gender AS patients_gender, patients.phone_number AS patients_phone_number, patients.email AS patients_email, patients.address AS patients_address, patients.primary_diagnosis AS patients_primary_diagnosis, patients.secondary_diagnoses AS patients_secondary_diagnoses, patients.protocol_type AS patients_protocol_type, patients.primary_nurse_id AS patients_primary_nurse_id, patients.emergency_contact_name AS patients_emergency_contact_name, patients.emergency_contact_phone AS patients_emergency_contact_phone, patients.emergency_contact_relationship AS patients_emergency_contact_relationship, patients.advance_directive AS patients_advance_directive, patients.dnr_status AS patients_dnr_status, patients.allergies AS patients_allergies, patients.notes AS patients_notes, patients.is_active AS patients_is_active, patients.created_at AS patients_created_at, patients.updated_at AS patients_updated_at 
FROM patients 
WHERE patients.id = %(pk_1)s
2025-04-15 00:56:07,380 INFO sqlalchemy.engine.Engine [generated in 0.00008s] {'pk_1': 20}
2025-04-15 00:56:07,381 INFO sqlalchemy.engine.Engine SELECT count(*) AS count_1 
FROM (SELECT patients.id AS patients_id, patients.mrn AS patients_mrn, patients.first_name AS patients_first_name, patients.last_name AS patients_last_name, patients.date_of_birth AS patients_date_of_birth, patients.gender AS patients_gender, patients.phone_number AS patients_phone_number, patients.email AS patients_email, patients.address AS patients_address, patients.primary_diagnosis AS patients_primary_diagnosis, patients.secondary_diagnoses AS patients_secondary_diagnoses, patients.protocol_type AS patients_protocol_type, patients.primary_nurse_id AS patients_primary_nurse_id, patients.emergency_contact_name AS patients_emergency_contact_name, patients.emergency_contact_phone AS patients_emergency_contact_phone, patients.emergency_contact_relationship AS patients_emergency_contact_relationship, patients.advance_directive AS patients_advance_directive, patients.dnr_status AS patients_dnr_status, patients.allergies AS patients_allergies, patients.notes AS patients_notes, patients.is_active AS patients_is_active, patients.created_at AS patients_created_at, patients.updated_at AS patients_updated_at 
FROM patients 
WHERE patients.is_active = true) AS anon_1
2025-04-15 00:56:07,381 INFO sqlalchemy.engine.Engine [generated in 0.00009s] {}
2025-04-15 00:56:07,381 INFO sqlalchemy.engine.Engine SELECT patients.id AS patients_id, patients.mrn AS patients_mrn, patients.first_name AS patients_first_name, patients.last_name AS patients_last_name, patients.date_of_birth AS patients_date_of_birth, patients.gender AS patients_gender, patients.phone_number AS patients_phone_number, patients.email AS patients_email, patients.address AS patients_address, patients.primary_diagnosis AS patients_primary_diagnosis, patients.secondary_diagnoses AS patients_secondary_diagnoses, patients.protocol_type AS patients_protocol_type, patients.primary_nurse_id AS patients_primary_nurse_id, patients.emergency_contact_name AS patients_emergency_contact_name, patients.emergency_contact_phone AS patients_emergency_contact_phone, patients.emergency_contact_relationship AS patients_emergency_contact_relationship, patients.advance_directive AS patients_advance_directive, patients.dnr_status AS patients_dnr_status, patients.allergies AS patients_allergies, patients.notes AS patients_notes, patients.is_active AS patients_is_active, patients.created_at AS patients_created_at, patients.updated_at AS patients_updated_at 
FROM patients 
WHERE patients.id = %(pk_1)s
2025-04-15 00:56:07,381 INFO sqlalchemy.engine.Engine [cached since 0.001515s ago] {'pk_1': 19}
2025-04-15 00:56:07,381 INFO sqlalchemy.engine.Engine SELECT patients.id AS patients_id, patients.mrn AS patients_mrn, patients.first_name AS patients_first_name, patients.last_name AS patients_last_name, patients.date_of_birth AS patients_date_of_birth, patients.gender AS patients_gender, patients.phone_number AS patients_phone_number, patients.email AS patients_email, patients.address AS patients_address, patients.primary_diagnosis AS patients_primary_diagnosis, patients.secondary_diagnoses AS patients_secondary_diagnoses, patients.protocol_type AS patients_protocol_type, patients.primary_nurse_id AS patients_primary_nurse_id, patients.emergency_contact_name AS patients_emergency_contact_name, patients.emergency_contact_phone AS patients_emergency_contact_phone, patients.emergency_contact_relationship AS patients_emergency_contact_relationship, patients.advance_directive AS patients_advance_directive, patients.dnr_status AS patients_dnr_status, patients.allergies AS patients_allergies, patients.notes AS patients_notes, patients.is_active AS patients_is_active, patients.created_at AS patients_created_at, patients.updated_at AS patients_updated_at 
FROM patients 
WHERE patients.id = %(pk_1)s
2025-04-15 00:56:07,382 INFO sqlalchemy.engine.Engine [cached since 0.002091s ago] {'pk_1': 21}
2025-04-15 00:56:07,382 INFO sqlalchemy.engine.Engine SELECT patients.protocol_type AS patients_protocol_type, count(patients.id) AS count_1 
FROM patients 
WHERE patients.is_active = true GROUP BY patients.protocol_type
2025-04-15 00:56:07,382 INFO sqlalchemy.engine.Engine [generated in 0.00007s] {}
2025-04-15 00:56:07,382 INFO sqlalchemy.engine.Engine ROLLBACK
2025-04-15 00:56:07,384 INFO sqlalchemy.engine.Engine SELECT count(*) AS count_1 
FROM (SELECT calls.id AS calls_id, calls.patient_id AS calls_patient_id, calls.conducted_by_id AS calls_conducted_by_id, calls.scheduled_time AS calls_scheduled_time, calls.start_time AS calls_start_time, calls.end_time AS calls_end_time, calls.duration AS calls_duration, calls.status AS calls_status, calls.call_type AS calls_call_type, calls.twilio_call_sid AS calls_twilio_call_sid, calls.recording_url AS calls_recording_url, calls.transcript AS calls_transcript, calls.notes AS calls_notes, calls.created_at AS calls_created_at, calls.updated_at AS calls_updated_at 
FROM calls 
WHERE calls.scheduled_time >= %(scheduled_time_1)s AND calls.scheduled_time < %(scheduled_time_2)s) AS anon_1
2025-04-15 00:56:07,384 INFO sqlalchemy.engine.Engine [generated in 0.00007s] {'scheduled_time_1': datetime.datetime(2025, 4, 15, 0, 0), 'scheduled_time_2': datetime.datetime(2025, 4, 16, 0, 0)}
2025-04-15 00:56:07,386 INFO sqlalchemy.engine.Engine SELECT count(*) AS count_1 
FROM (SELECT calls.id AS calls_id, calls.patient_id AS calls_patient_id, calls.conducted_by_id AS calls_conducted_by_id, calls.scheduled_time AS calls_scheduled_time, calls.start_time AS calls_start_time, calls.end_time AS calls_end_time, calls.duration AS calls_duration, calls.status AS calls_status, calls.call_type AS calls_call_type, calls.twilio_call_sid AS calls_twilio_call_sid, calls.recording_url AS calls_recording_url, calls.transcript AS calls_transcript, calls.notes AS calls_notes, calls.created_at AS calls_created_at, calls.updated_at AS calls_updated_at 
FROM calls 
WHERE calls.status = %(status_1)s AND calls.end_time >= %(end_time_1)s AND calls.end_time < %(end_time_2)s) AS anon_1
2025-04-15 00:56:07,386 INFO sqlalchemy.engine.Engine [generated in 0.00007s] {'status_1': 'COMPLETED', 'end_time_1': datetime.datetime(2025, 4, 15, 0, 0), 'end_time_2': datetime.datetime(2025, 4, 16, 0, 0)}
2025-04-15 00:56:07,388 INFO sqlalchemy.engine.Engine SELECT count(*) AS count_1 
FROM (SELECT calls.id AS calls_id, calls.patient_id AS calls_patient_id, calls.conducted_by_id AS calls_conducted_by_id, calls.scheduled_time AS calls_scheduled_time, calls.start_time AS calls_start_time, calls.end_time AS calls_end_time, calls.duration AS calls_duration, calls.status AS calls_status, calls.call_type AS calls_call_type, calls.twilio_call_sid AS calls_twilio_call_sid, calls.recording_url AS calls_recording_url, calls.transcript AS calls_transcript, calls.notes AS calls_notes, calls.created_at AS calls_created_at, calls.updated_at AS calls_updated_at 
FROM calls 
WHERE calls.status = %(status_1)s) AS anon_1
2025-04-15 00:56:07,388 INFO sqlalchemy.engine.Engine [generated in 0.00016s] {'status_1': 'SCHEDULED'}
2025-04-15 00:56:07,391 INFO sqlalchemy.engine.Engine SELECT count(*) AS count_1 
FROM (SELECT assessments.id AS assessments_id, assessments.patient_id AS assessments_patient_id, assessments.protocol_id AS assessments_protocol_id, assessments.conducted_by_id AS assessments_conducted_by_id, assessments.call_id AS assessments_call_id, assessments.assessment_date AS assessments_assessment_date, assessments.responses AS assessments_responses, assessments.symptoms AS assessments_symptoms, assessments.interventions AS assessments_interventions, assessments.notes AS assessments_notes, assessments.follow_up_needed AS assessments_follow_up_needed, assessments.follow_up_date AS assessments_follow_up_date, assessments.follow_up_priority AS assessments_follow_up_priority, assessments.ai_guidance AS assessments_ai_guidance, assessments.created_at AS assessments_created_at, assessments.updated_at AS assessments_updated_at 
FROM assessments 
WHERE assessments.assessment_date >= %(assessment_date_1)s AND assessments.assessment_date <= %(assessment_date_2)s) AS anon_1
2025-04-15 00:56:07,391 INFO sqlalchemy.engine.Engine [generated in 0.00007s] {'assessment_date_1': datetime.datetime(2025, 4, 13, 0, 0), 'assessment_date_2': datetime.datetime(2025, 4, 20, 0, 0)}
2025-04-15 00:56:07,393 INFO sqlalchemy.engine.Engine SELECT count(*) AS count_1 
FROM (SELECT assessments.id AS assessments_id, assessments.patient_id AS assessments_patient_id, assessments.protocol_id AS assessments_protocol_id, assessments.conducted_by_id AS assessments_conducted_by_id, assessments.call_id AS assessments_call_id, assessments.assessment_date AS assessments_assessment_date, assessments.responses AS assessments_responses, assessments.symptoms AS assessments_symptoms, assessments.interventions AS assessments_interventions, assessments.notes AS assessments_notes, assessments.follow_up_needed AS assessments_follow_up_needed, assessments.follow_up_date AS assessments_follow_up_date, assessments.follow_up_priority AS assessments_follow_up_priority, assessments.ai_guidance AS assessments_ai_guidance, assessments.created_at AS assessments_created_at, assessments.updated_at AS assessments_updated_at 
FROM assessments 
WHERE assessments.follow_up_needed = true AND assessments.follow_up_priority = %(follow_up_priority_1)s) AS anon_1
2025-04-15 00:56:07,393 INFO sqlalchemy.engine.Engine [generated in 0.00016s] {'follow_up_priority_1': 'HIGH'}
2025-04-15 00:56:07,394 INFO sqlalchemy.engine.Engine ROLLBACK
[2025-04-15 01:00:46 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:14)
[2025-04-15 01:00:46 +0000] [14] [INFO] Worker exiting (pid: 14)
[2025-04-15 01:00:46 +0000] [1] [ERROR] Worker (pid:14) exited with code 1
[2025-04-15 01:00:46 +0000] [1] [ERROR] Worker (pid:14) exited with code 1.
[2025-04-15 01:00:46 +0000] [31] [INFO] Booting worker with pid: 31
[2025-04-15 01:44:08 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:16)
[2025-04-15 01:44:08 +0000] [16] [INFO] Worker exiting (pid: 16)
[2025-04-15 01:44:08 +0000] [1] [ERROR] Worker (pid:16) exited with code 1
[2025-04-15 01:44:08 +0000] [1] [ERROR] Worker (pid:16) exited with code 1.
[2025-04-15 01:44:08 +0000] [32] [INFO] Booting worker with pid: 32
API endpoint /api/startup-logs called at 2025-04-15 01:44:29
Attempting to get docker logs...
Error getting docker logs: Command 'docker logs palliative_care_platform-web-1 2>&1' returned non-zero exit status 127.
Checking for log file at /app/startup_log.txt
Log file exists, attempting to read
Startup logs read: 41538 characters
Adding hardcoded terminal output
Sending response with 56101 characters of log data
[2025-04-15 01:46:06 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:17)
[2025-04-15 01:46:06 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:32)
[2025-04-15 01:46:06 +0000] [17] [INFO] Worker exiting (pid: 17)
[2025-04-15 01:46:06 +0000] [32] [INFO] Worker exiting (pid: 32)
[2025-04-15 01:46:06 +0000] [1] [ERROR] Worker (pid:17) exited with code 1
[2025-04-15 01:46:06 +0000] [1] [ERROR] Worker (pid:17) exited with code 1.
[2025-04-15 01:46:06 +0000] [34] [INFO] Booting worker with pid: 34
[2025-04-15 01:46:06 +0000] [1] [ERROR] Worker (pid:32) was sent SIGKILL! Perhaps out of memory?
[2025-04-15 01:46:07 +0000] [35] [INFO] Booting worker with pid: 35
API endpoint /api/startup-logs called at 2025-04-15 03:11:29
Attempting to get docker logs...
Error getting docker logs: Command 'docker logs palliative_care_platform-web-1 2>&1' returned non-zero exit status 127.
Checking for log file at /app/startup_log.txt
Log file exists, attempting to read
Startup logs read: 42602 characters
Adding hardcoded terminal output
Sending response with 57165 characters of log data
[2025-04-15 04:28:23 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:15)
[2025-04-15 04:28:23 +0000] [15] [INFO] Worker exiting (pid: 15)
[2025-04-15 04:28:23 +0000] [1] [ERROR] Worker (pid:15) exited with code 1
[2025-04-15 04:28:23 +0000] [1] [ERROR] Worker (pid:15) exited with code 1.
[2025-04-15 04:28:23 +0000] [37] [INFO] Booting worker with pid: 37
API endpoint /api/startup-logs called at 2025-04-15 04:56:28
Attempting to get docker logs...
Error getting docker logs: Command 'docker logs palliative_care_platform-web-1 2>&1' returned non-zero exit status 127.
Checking for log file at /app/startup_log.txt
Log file exists, attempting to read
Startup logs read: 43369 characters
Adding hardcoded terminal output
Sending response with 57932 characters of log data
