# Docker Compose configuration for PROD/Production environment
# Use: docker-compose -f docker-compose-prod.yml up

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - IMAGE_VERSION=${INTEL_CURRENT_TAG:-intel-0.0.1}
        - DEV_STATE=PROD
        - FLASK_ENV=production
        - DEBUG=false
    ports:
      - "8081:5000"
    volumes:
      - ./data:/app/data  # Only mount data directory, not source code
    env_file:
      - .env
    environment:
      - FLASK_ENV=production
      - DEBUG=false
      - CONTAINER_MODE=true
      - PORT=5000
      - DEV_STATE=PROD
      - DATABASE_URL=${DATABASE_URL}
      - LOG_DIR=  # Disable file logging for containers
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    command: ["bash", "/app/scripts/entrypoint.sh"]
    networks:
      - palliative-care-network

  db:
    image: postgres:14
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_LOCAL_PASSWORD}
      - POSTGRES_USER=${POSTGRES_LOCAL_USER}
      - POSTGRES_DB=${POSTGRES_LOCAL_DB}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_LOCAL_USER} -d ${POSTGRES_LOCAL_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - palliative-care-network

networks:
  palliative-care-network:
    driver: bridge

volumes:
  postgres_data_prod:
