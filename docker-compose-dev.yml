# Docker Compose configuration for TEST/Development environment
# Use: docker-compose -f docker-compose-dev.yml up

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - IMAGE_VERSION=dev-${INTEL_CURRENT_TAG:-intel-0.0.1}
        - DEV_STATE=TEST
        - FLASK_ENV=development
        - DEBUG=true
    ports:
      - "8081:5000"
    volumes:
      - ./data:/app/data
      - ./src:/app/src  # Mount webapp source code for live development
      - ./run.py:/app/run.py
    env_file:
      - .env
    environment:
      - FLASK_ENV=development
      - DEBUG=true
      - CONTAINER_MODE=true
      - PORT=5000
      - DEV_STATE=TEST
      - DATABASE_URL=${DATABASE_LOCAL_URL}
      # Runtime environment detection - set to 'local' for Docker development
      - RUNTIME_ENV=local
      - RETELLAI_LOCAL_WEBHOOK=${RETELLAI_LOCAL_WEBHOOK}
      - RETELLAI_LOCAL_AGENT_ID=${RETELLAI_LOCAL_AGENT_ID}
      - RETELLAI_API_KEY=${RETELLAI_API_KEY}
      - RETELLAI_PHONE_NUMBER=${RETELLAI_PHONE_NUMBER}
      - LOG_DIR=  # Disable file logging for containers
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    command: flask run --host=0.0.0.0 --port=5000 --debug
    networks:
      - palliative-care-network

  db:
    image: postgres:14
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_LOCAL_PASSWORD}
      - POSTGRES_USER=${POSTGRES_LOCAL_USER}
      - POSTGRES_DB=${POSTGRES_LOCAL_DB}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data/
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_LOCAL_USER} -d ${POSTGRES_LOCAL_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - palliative-care-network

networks:
  palliative-care-network:
    driver: bridge

volumes:
  postgres_data_dev: